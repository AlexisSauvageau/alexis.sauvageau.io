export const initialProjects = [
    {
        id: 10,
        title: "ROM Hacking",
        type: "Projet personnel",
        desc: "Modification de la ROM du jeu Mario Kart DS, en implémentant mes propres textures, sons, et en personnalisant le code via désassembleur pour remplacer l'item 'Banane' par un nouvel item original.",
        tags: ["C++","ROM"],
        year: 2025,
        dates: "octobre 2025 - novembre 2025",
        area: 'OS',
        icon: "icons/rom.svg",
        team: 1,
        languages: ["C++", "Assembleur"],
        tools: ["MKDS Course Modifier (ouvrir la ROM du jeu et extraire ses fichiers)", "Ghidra (désassembler et modifier du code binaire)", "Nitro Studio (modifier les fichiers sonores de la ROM)", "Nitro Explorer (modifier la ROM en intégrant mes propres fichiers)"],
        images: []
    },
    {
        id: 9,
        title: "Application de Planning Poker",
        type: "Projet scolaire",
        enterprise: "Université Lumière Lyon 2",
        desc: "Création d'une application WPF via C# .NET qui permet à une équipe de développeurs de faire des sessions de planning poker.",
        tags: ["C#","Agile"],
        year: 2025,
        dates: "octobre 2025 - décembre 2025",
        area: 'Application',
        icon: "icons/agile.svg",
        team: 2,
        languages: ["C#", "XAML"],
        tools: ["GitHub (versionner le projet)", "SCRUM (méthode agile de gestion de projet)"],
        images: []
    },
    {
        id: 8,
        title: "Systèmes embarqués",
        type: "CDD étudiant",
        enterprise: "Mini World Lyon",
        desc: "Maintenance logicielle d’un parc miniature dans un job étudiant :  programmation de cartes Raspberry et Arduino, révision de l’architecture informatique du parc.",
        tags: ["IoT","Python","C#"],
        year: 2025,
        dates: "juin 2025 - Aujourd'hui",
        area: 'IoT',
        icon: "icons/embedded_systems.svg",
        team: 1,
        languages: ["Python (Raspberry Linux)", "C# (Raspberry Windows)", "C (Arduino)", "XML (communication réseau)"],
        tools: ["Raspberry Pi Imager (installer un OS Linux sur les Raspberry)", "JMRI (logiciel permettant de piloter des trains depuis une Raspberry)", "GitHub (versionner et centraliser les différents projets)", "Figma (expliquer l'architecture aux novices à l'aide de schémas)"],
        images: ["mini_world.png", "mini_world2.png"]
    },
    {
        id: 7,
        title: "Émulateur",
        type: "Projet personnel",
        desc: "Création d’un émulateur Chip-8 en C, qui simule toute l’architecture (registres, RAM...) et permet de lancer des ROM pour jouer à des jeux 2D, avec la bibliothèque SDL2.",
        tags: ["C","Assembleur","SDL"],
        year: 2025,
        dates: "janvier 2025",
        area: 'OS',
        icon: "icons/emulator.svg",
        team: 1,
        languages: ["C", "Assembleur"],
        tools: ["SDL (afficher une fenêtre graphique)"],
        images: ["emulateur.png"]
    },
    {
        id: 6,
        title: "Classification d'arbres",
        type: "Projet scolaire",
        enterprise: "Université de Sherbrooke",
        desc: "Mise en place de 6 techniques de classification linéaire, pour prédire le type d’arbre selon les feuilles passées en entrée, et minimisation des erreurs avec la descente de gradients.",
        tags: ["Python","Numpy"],
        year: 2024,
        dates: "novembre 2024 - décembre 2024",
        area: 'IA',
        icon: "icons/ai.svg",
        team: 5,
        languages: ["Python"],
        tools: ["Numpy (manipuler matrices et vecteurs)", "Scikit-Learn (importer des modèles de réseaux de neurones)", "GitHub (versionner le projet)"],
        images: ["ia.png", "ia2.png"]
    },
    {
        id: 5,
        title: "Maison intelligente",
        type: "Projet scolaire",
        enterprise: "Université de Sherbrooke",
        desc: "Déploiement d’un système réparti dans mon appartement avec divers capteurs, afin de le rendre “intelligent” : éclairage qui s’adapte à la luminosité ambiante (capteur de luminosité), boîte aux lettres qui me notifie dès que je reçois du courrier (capteur de mouvements).",
        tags: ["OpenHAB", "MQTT"],
        year: 2024,
        dates: "octobre 2024 - décembre 2024",
        area: 'IoT',
        icon: "icons/openhab.svg",
        team: 4,
        languages: ["Java (règles OpenHAB)"],
        tools: ["OpenHAB (centraliser les appareils intelligents)", "MQTT (communication entre les appareils)", "Raspberry Pi (reçoit les données des capteurs et exécute les règles OpenHAB)"],
        images: ["systemes_repartis.png", "systemes_repartis2.png"]
    },
    {
        id: 4,
        title: "Scène 3D animée",
        type: "Projet scolaire",
        enterprise: "Université de Sherbrooke",
        desc: "Création d’une scène 3D - avec OpenGL - utilisant les techniques modernes d’infographie pour les jeux-vidéos, écriture des shaders, et calcul des reflets et de l’illumination dans la scène (modèle de Phong).",
        tags: ["Jeux-vidéos", "Infographie"],
        year: 2024,
        dates: "septembre 2024 - décembre 2024",
        area: 'Jeux-vidéos',
        icon: "icons/gaming.svg",
        team: 3,
        languages: ["C++", "GLSL (shaders)"],
        tools: ["OpenGL (faire des rendus de scènes 3D)", "Blender (modéliser des objets 3D)"],
        images: ["jeux.png"]
    },
    {
        id: 3,
        title: "Application de covoiturage",
        type: "Projet scolaire",
        enterprise: "Université de Sherbrooke",
        desc: "Création d’un client Android, d’un serveur REST NodeJS et d’une base de données MongoDB pour une application mobile de gestion de trajets en covoiturage. Utilisation de l’IA ML-Kit qui vérifie la validité du permis de conduire des chauffeurs.",
        tags: ["Mobile", "Web"],
        year: 2024,
        dates: "août 2024 - décembre 2024",
        area: 'Application',
        icon: "icons/mobile.svg",
        team: 6,
        languages: ["Kotlin (front-end)", "JS (back-end)"],
        tools: ["Jetpack Compose (faciliter la gestion de l'UI)", "NodeJS (créer un serveur REST)", "MongoDB (base de données contenant utilisateurs, chauffeurs et trajets)", "GitHub (versionner le projet)"],
        images: ["charbonheur.png"]
    },
    {
        id: 2,
        title: "Web scraping",
        type: "Projet scolaire",
        enterprise: "Université Savoie Mont Blanc",
        desc: "Développement d’un site web - via la méthode agile SCRUM - récoltant des posts sur divers réseaux sociaux, permettant à des chercheurs d’étudier la sensibilité des internautes à la biodiversité. Mise en place d’un réseau de neurones qui analyse massivement les données récoltées, facilitant ainsi le travail des chercheurs.",
        tags: ["Web", "Réseaux sociaux", "IA", "Agile"],
        year: 2023,
        dates: "novembre 2023 - mai 2024",
        area: 'Web',
        icon: "icons/network.svg",
        team: 6,
        languages: ["JS (front-end)", "Python (back-end)"],
        tools: ["Flask (exécuter des scripts Python depuis une interface web)", "Keras (créer un réseau de neurones qui analyse des phrases)", "GitHub (versionner le projet)", "SCRUM (méthode agile de gestion de projet)"],
        images: ["web_scraping.png", "web_scraping2.png"]
    },
    {
        id: 1,
        title: "Agenda collaboratif",
        type: "Projet scolaire",
        enterprise: "Université Savoie Mont Blanc",
        desc: "Développement d’un site web - via la méthode agile SCRUM - mettant en place un agenda collaboratif d'une entreprise fictive de chauffeurs de bus.",
        tags: ["Web", "Agile"],
        year: 2023,
        dates: "janvier 2023 - mai 2023",
        area: 'Web',
        icon: "icons/schedule.svg",
        team: 5,
        languages: ["JS (front-end)", "PHP (back-end)"],
        tools: ["NodeJS (créer un serveur REST)", "AJAX (exécuter des requêtes asynchrones)", "MySQL (base de données contenant les chauffeurs et les créneaux horaires)", "GitHub (versionner le projet)", "SCRUM (méthode agile de gestion de projet)"],
        images: ["gobus.png"]
    }
];